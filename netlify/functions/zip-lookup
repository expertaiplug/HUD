// netlify/functions/zip-lookup.js - Universal ZIP Code Handler
const fetch = require('node-fetch');

// Real ZIP-to-MSA APIs and data sources
const DATA_SOURCES = {
  zipAPI: 'https://api.zippopotam.us/us/', // Free ZIP code API
  hudCrosswalk: 'https://www.huduser.gov/portal/datasets/usps_crosswalk.html',
  censusMSA: 'https://www.census.gov/geographies/reference-files/time-series/demo/metro-micro/delineation-files.html',
  geonames: 'http://api.geonames.org/postalCodeLookupJSON'
};

// Comprehensive MSA mapping (expandable to all US metros)
const MSA_DATABASE = {
  // Major Metro Areas (Top 50+ markets)
  '10180': { name: 'Abilene, TX', state: 'TX' },
  '10420': { name: 'Akron, OH', state: 'OH' },
  '10500': { name: 'Albany, GA', state: 'GA' },
  '10580': { name: 'Albany-Schenectady-Troy, NY', state: 'NY' },
  '10740': { name: 'Albuquerque, NM', state: 'NM' },
  '10900': { name: 'Allentown-Bethlehem-Easton, PA-NJ', state: 'PA' },
  '11020': { name: 'Altoona, PA', state: 'PA' },
  '11100': { name: 'Amarillo, TX', state: 'TX' },
  '11260': { name: 'Anchorage, AK', state: 'AK' },
  '11460': { name: 'Ann Arbor, MI', state: 'MI' },
  '11500': { name: 'Anniston-Oxford, AL', state: 'AL' },
  '11700': { name: 'Asheville, NC', state: 'NC' },
  '12020': { name: 'Athens-Clarke County, GA', state: 'GA' },
  '12060': { name: 'Atlanta-Sandy Springs-Roswell, GA', state: 'GA' },
  '12100': { name: 'Atlantic City-Hammonton, NJ', state: 'NJ' },
  '12220': { name: 'Auburn-Opelika, AL', state: 'AL' },
  '12260': { name: 'Augusta-Richmond County, GA-SC', state: 'GA' },
  '12420': { name: 'Austin-Round Rock, TX', state: 'TX' },
  '12540': { name: 'Bakersfield, CA', state: 'CA' },
  '12580': { name: 'Baltimore-Columbia-Towson, MD', state: 'MD' },
  '12940': { name: 'Baton Rouge, LA', state: 'LA' },
  '13020': { name: 'Battle Creek, MI', state: 'MI' },
  '13140': { name: 'Beaumont-Port Arthur, TX', state: 'TX' },
  '13380': { name: 'Bellingham, WA', state: 'WA' },
  '13740': { name: 'Binghamton, NY', state: 'NY' },
  '13820': { name: 'Birmingham-Hoover, AL', state: 'AL' },
  '13900': { name: 'Bismarck, ND', state: 'ND' },
  '13980': { name: 'Blacksburg-Christiansburg-Radford, VA', state: 'VA' },
  '14010': { name: 'Bloomington, IL', state: 'IL' },
  '14020': { name: 'Bloomington, IN', state: 'IN' },
  '14260': { name: 'Boise City, ID', state: 'ID' },
  '14460': { name: 'Boston-Cambridge-Newton, MA-NH', state: 'MA' },
  '14500': { name: 'Boulder, CO', state: 'CO' },
  '14740': { name: 'Bremerton-Silverdale, WA', state: 'WA' },
  '14860': { name: 'Bridgeport-Stamford-Norwalk, CT', state: 'CT' },
  '15180': { name: 'Brownsville-Harlingen, TX', state: 'TX' },
  '15260': { name: 'Brunswick, GA', state: 'GA' },
  '15380': { name: 'Buffalo-Cheektowaga-Niagara Falls, NY', state: 'NY' },
  '15500': { name: 'Burlington, NC', state: 'NC' },
  '15540': { name: 'Burlington-South Burlington, VT', state: 'VT' },
  '15980': { name: 'Canton-Massillon, OH', state: 'OH' },
  '16180': { name: 'Cape Coral-Fort Myers, FL', state: 'FL' },
  '16220': { name: 'Cape Girardeau, MO-IL', state: 'MO' },
  '16300': { name: 'Cedar Rapids, IA', state: 'IA' },
  '16580': { name: 'Champaign-Urbana, IL', state: 'IL' },
  '16620': { name: 'Charleston, WV', state: 'WV' },
  '16700': { name: 'Charleston-North Charleston, SC', state: 'SC' },
  '16740': { name: 'Charlotte-Concord-Gastonia, NC-SC', state: 'NC' },
  '16820': { name: 'Charlottesville, VA', state: 'VA' },
  '16860': { name: 'Chattanooga, TN-GA', state: 'TN' },
  '16980': { name: 'Chicago-Naperville-Elgin, IL-IN-WI', state: 'IL' },
  '17020': { name: 'Chico, CA', state: 'CA' },
  '17140': { name: 'Cincinnati, OH-KY-IN', state: 'OH' },
  '17460': { name: 'Cleveland-Elyria, OH', state: 'OH' },
  '17660': { name: 'Coeur d\'Alene, ID', state: 'ID' },
  '17780': { name: 'College Station-Bryan, TX', state: 'TX' },
  '17820': { name: 'Colorado Springs, CO', state: 'CO' },
  '17900': { name: 'Columbia, MO', state: 'MO' },
  '17980': { name: 'Columbia, SC', state: 'SC' },
  '18140': { name: 'Columbus, OH', state: 'OH' },
  '18580': { name: 'Corpus Christi, TX', state: 'TX' },
  '19060': { name: 'Cumberland, MD-WV', state: 'MD' },
  '19100': { name: 'Dallas-Fort Worth-Arlington, TX', state: 'TX' },
  '19140': { name: 'Dalton, GA', state: 'GA' },
  '19340': { name: 'Davenport-Moline-Rock Island, IA-IL', state: 'IA' },
  '19380': { name: 'Dayton, OH', state: 'OH' },
  '19460': { name: 'Decatur, AL', state: 'AL' },
  '19500': { name: 'Decatur, IL', state: 'IL' },
  '19660': { name: 'Deltona-Daytona Beach-Ormond Beach, FL', state: 'FL' },
  '19740': { name: 'Denver-Aurora-Lakewood, CO', state: 'CO' },
  '19780': { name: 'Des Moines-West Des Moines, IA', state: 'IA' },
  '19820': { name: 'Detroit-Warren-Dearborn, MI', state: 'MI' },
  '20100': { name: 'Dover, DE', state: 'DE' },
  '20260': { name: 'Duluth, MN-WI', state: 'MN' },
  '20500': { name: 'Durham-Chapel Hill, NC', state: 'NC' },
  '20740': { name: 'Eau Claire, WI', state: 'WI' },
  '20940': { name: 'El Centro, CA', state: 'CA' },
  '21060': { name: 'El Paso, TX', state: 'TX' },
  '21140': { name: 'Elkhart-Goshen, IN', state: 'IN' },
  '21300': { name: 'Elmira, NY', state: 'NY' },
  '21340': { name: 'Erie, PA', state: 'PA' },
  '21500': { name: 'Eugene, OR', state: 'OR' },
  '21660': { name: 'Evansville, IN-KY', state: 'IN' },
  '21780': { name: 'Fairbanks, AK', state: 'AK' },
  '22020': { name: 'Fargo, ND-MN', state: 'ND' },
  '22140': { name: 'Farmington, NM', state: 'NM' },
  '22180': { name: 'Fayetteville, NC', state: 'NC' },
  '22220': { name: 'Fayetteville-Springdale-Rogers, AR-MO', state: 'AR' },
  '22420': { name: 'Flint, MI', state: 'MI' },
  '22500': { name: 'Florence, SC', state: 'SC' },
  '22520': { name: 'Florence-Muscle Shoals, AL', state: 'AL' },
  '22660': { name: 'Fort Collins, CO', state: 'CO' },
  '22900': { name: 'Fort Smith, AR-OK', state: 'AR' },
  '23060': { name: 'Fort Wayne, IN', state: 'IN' },
  '23420': { name: 'Fresno, CA', state: 'CA' },
  '23540': { name: 'Gadsden, AL', state: 'AL' },
  '23580': { name: 'Gainesville, FL', state: 'FL' },
  '24020': { name: 'Grand Rapids-Wyoming, MI', state: 'MI' },
  '24140': { name: 'Greeley, CO', state: 'CO' },
  '24220': { name: 'Green Bay, WI', state: 'WI' },
  '24300': { name: 'Greensboro-High Point, NC', state: 'NC' },
  '24340': { name: 'Greenville, NC', state: 'NC' },
  '24500': { name: 'Greenville-Anderson-Mauldin, SC', state: 'SC' },
  '24660': { name: 'Gulfport-Biloxi-Pascagoula, MS', state: 'MS' },
  '24780': { name: 'Hagerstown-Martinsburg, MD-WV', state: 'MD' },
  '25020': { name: 'Hanford-Corcoran, CA', state: 'CA' },
  '25180': { name: 'Harrisburg-Carlisle, PA', state: 'PA' },
  '25420': { name: 'Hartford-West Hartford-East Hartford, CT', state: 'CT' },
  '25500': { name: 'Hattiesburg, MS', state: 'MS' },
  '25540': { name: 'Hickory-Lenoir-Morganton, NC', state: 'NC' },
  '25860': { name: 'Honolulu, HI', state: 'HI' },
  '25980': { name: 'Houma-Thibodaux, LA', state: 'LA' },
  '26100': { name: 'Houston-The Woodlands-Sugar Land, TX', state: 'TX' },
  '26380': { name: 'Huntington-Ashland, WV-KY-OH', state: 'WV' },
  '26420': { name: 'Huntsville, AL', state: 'AL' },
  '26620': { name: 'Indianapolis-Carmel-Anderson, IN', state: 'IN' },
  '26900': { name: 'Iowa City, IA', state: 'IA' },
  '27060': { name: 'Ithaca, NY', state: 'NY' },
  '27100': { name: 'Jackson, MI', state: 'MI' },
  '27140': { name: 'Jackson, MS', state: 'MS' },
  '27180': { name: 'Jackson, TN', state: 'TN' },
  '27260': { name: 'Jacksonville, FL', state: 'FL' },
  '27340': { name: 'Jacksonville, NC', state: 'NC' },
  '27500': { name: 'Janesville-Beloit, WI', state: 'WI' },
  '27740': { name: 'Johnson City, TN', state: 'TN' },
  '27780': { name: 'Johnstown, PA', state: 'PA' },
  '27900': { name: 'Joplin, MO', state: 'MO' },
  '28020': { name: 'Kalamazoo-Portage, MI', state: 'MI' },
  '28100': { name: 'Kankakee, IL', state: 'IL' },
  '28140': { name: 'Kansas City, MO-KS', state: 'MO' },
  '28420': { name: 'Kennewick-Richland, WA', state: 'WA' },
  '28660': { name: 'Killeen-Temple, TX', state: 'TX' },
  '28700': { name: 'Kingsport-Bristol-Bristol, TN-VA', state: 'TN' },
  '28940': { name: 'Knoxville, TN', state: 'TN' },
  '29100': { name: 'Kokomo, IN', state: 'IN' },
  '29180': { name: 'La Crosse-Onalaska, WI-MN', state: 'WI' },
  '29340': { name: 'Lafayette, LA', state: 'LA' },
  '29420': { name: 'Lafayette-West Lafayette, IN', state: 'IN' },
  '29460': { name: 'Lake Charles, LA', state: 'LA' },
  '29540': { name: 'Lake Havasu City-Kingman, AZ', state: 'AZ' },
  '29620': { name: 'Lakeland-Winter Haven, FL', state: 'FL' },
  '29700': { name: 'Lancaster, PA', state: 'PA' },
  '29740': { name: 'Lansing-East Lansing, MI', state: 'MI' },
  '29820': { name: 'Las Vegas-Henderson-Paradise, NV', state: 'NV' },
  '30020': { name: 'Lawrence, KS', state: 'KS' },
  '30140': { name: 'Lawton, OK', state: 'OK' },
  '30300': { name: 'Lewiston, ID-WA', state: 'ID' },
  '30340': { name: 'Lewiston-Auburn, ME', state: 'ME' },
  '30460': { name: 'Lexington-Fayette, KY', state: 'KY' },
  '30620': { name: 'Lima, OH', state: 'OH' },
  '30700': { name: 'Lincoln, NE', state: 'NE' },
  '30780': { name: 'Little Rock-North Little Rock-Conway, AR', state: 'AR' },
  '30860': { name: 'Logan, UT-ID', state: 'UT' },
  '30980': { name: 'Longview, TX', state: 'TX' },
  '31020': { name: 'Longview, WA', state: 'WA' },
  '31084': { name: 'Los Angeles-Long Beach-Anaheim, CA', state: 'CA' },
  '31140': { name: 'Louisville/Jefferson County, KY-IN', state: 'KY' },
  '31180': { name: 'Lubbock, TX', state: 'TX' },
  '31340': { name: 'Lynchburg, VA', state: 'VA' },
  '31420': { name: 'Macon, GA', state: 'GA' },
  '31460': { name: 'Madera, CA', state: 'CA' },
  '31540': { name: 'Madison, WI', state: 'WI' },
  '31700': { name: 'Manchester-Nashua, NH', state: 'NH' },
  '31740': { name: 'Manhattan, KS', state: 'KS' },
  '31860': { name: 'Mankato-North Mankato, MN', state: 'MN' },
  '31900': { name: 'Mansfield, OH', state: 'OH' },
  '32580': { name: 'McAllen-Edinburg-Mission, TX', state: 'TX' },
  '32780': { name: 'Medford, OR', state: 'OR' },
  '32820': { name: 'Memphis, TN-MS-AR', state: 'TN' },
  '32900': { name: 'Merced, CA', state: 'CA' },
  '33100': { name: 'Miami-Fort Lauderdale-West Palm Beach, FL', state: 'FL' },
  '33140': { name: 'Michigan City-La Porte, IN', state: 'IN' },
  '33260': { name: 'Midland, TX', state: 'TX' },
  '33340': { name: 'Milwaukee-Waukesha-West Allis, WI', state: 'WI' },
  '33460': { name: 'Minneapolis-St. Paul-Bloomington, MN-WI', state: 'MN' },
  '33540': { name: 'Missoula, MT', state: 'MT' },
  '33660': { name: 'Mobile, AL', state: 'AL' },
  '33700': { name: 'Modesto, CA', state: 'CA' },
  '33740': { name: 'Monroe, LA', state: 'LA' },
  '33780': { name: 'Monroe, MI', state: 'MI' },
  '33860': { name: 'Montgomery, AL', state: 'AL' },
  '34060': { name: 'Morgantown, WV', state: 'WV' },
  '34100': { name: 'Morristown, TN', state: 'TN' },
  '34580': { name: 'Muncie, IN', state: 'IN' },
  '34620': { name: 'Muskegon, MI', state: 'MI' },
  '34740': { name: 'Myrtle Beach-Conway-North Myrtle Beach, SC-NC', state: 'SC' },
  '34820': { name: 'Napa, CA', state: 'CA' },
  '34900': { name: 'Naples-Immokalee-Marco Island, FL', state: 'FL' },
  '34940': { name: 'Nashville-Davidson--Murfreesboro--Franklin, TN', state: 'TN' },
  '35004': { name: 'Nassau County-Suffolk County, NY', state: 'NY' },
  '35084': { name: 'Newark, NJ-PA', state: 'NJ' },
  '35300': { name: 'New Haven-Milford, CT', state: 'CT' },
  '35380': { name: 'New Orleans-Metairie, LA', state: 'LA' },
  '35614': { name: 'New York-Jersey City-White Plains, NY-NJ', state: 'NY' },
  '35660': { name: 'Niles-Benton Harbor, MI', state: 'MI' },
  '35840': { name: 'North Port-Sarasota-Bradenton, FL', state: 'FL' },
  '35980': { name: 'Norwich-New London, CT', state: 'CT' },
  '36084': { name: 'Oakland-Hayward-Berkeley, CA', state: 'CA' },
  '36100': { name: 'Ocala, FL', state: 'FL' },
  '36140': { name: 'Ocean City, NJ', state: 'NJ' },
  '36220': { name: 'Odessa, TX', state: 'TX' },
  '36260': { name: 'Ogden-Clearfield, UT', state: 'UT' },
  '36420': { name: 'Oklahoma City, OK', state: 'OK' },
  '36500': { name: 'Olympia-Tumwater, WA', state: 'WA' },
  '36540': { name: 'Omaha-Council Bluffs, NE-IA', state: 'NE' },
  '36740': { name: 'Orlando-Kissimmee-Sanford, FL', state: 'FL' },
  '36780': { name: 'Oshkosh-Neenah, WI', state: 'WI' },
  '37100': { name: 'Owensboro, KY', state: 'KY' },
  '37340': { name: 'Palm Bay-Melbourne-Titusville, FL', state: 'FL' },
  '37460': { name: 'Panama City, FL', state: 'FL' },
  '37620': { name: 'Parkersburg-Vienna, WV', state: 'WV' },
  '37700': { name: 'Pensacola-Ferry Pass-Brent, FL', state: 'FL' },
  '37860': { name: 'Peoria, IL', state: 'IL' },
  '37964': { name: 'Philadelphia-Camden-Wilmington, PA-NJ-DE-MD', state: 'PA' },
  '38060': { name: 'Phoenix-Mesa-Scottsdale, AZ', state: 'AZ' },
  '38220': { name: 'Pine Bluff, AR', state: 'AR' },
  '38300': { name: 'Pittsburgh, PA', state: 'PA' },
  '38340': { name: 'Pittsfield, MA', state: 'MA' },
  '38540': { name: 'Pocatello, ID', state: 'ID' },
  '38860': { name: 'Portland-South Portland, ME', state: 'ME' },
  '38900': { name: 'Portland-Vancouver-Hillsboro, OR-WA', state: 'OR' },
  '39100': { name: 'Poughkeepsie-Newburgh-Middletown, NY', state: 'NY' },
  '39140': { name: 'Prescott, AZ', state: 'AZ' },
  '39300': { name: 'Providence-Warwick, RI-MA', state: 'RI' },
  '39340': { name: 'Provo-Orem, UT', state: 'UT' },
  '39380': { name: 'Pueblo, CO', state: 'CO' },
  '39460': { name: 'Punta Gorda, FL', state: 'FL' },
  '39540': { name: 'Racine, WI', state: 'WI' },
  '39580': { name: 'Raleigh, NC', state: 'NC' },
  '39660': { name: 'Rapid City, SD', state: 'SD' },
  '39740': { name: 'Reading, PA', state: 'PA' },
  '39820': { name: 'Redding, CA', state: 'CA' },
  '39900': { name: 'Reno, NV', state: 'NV' },
  '40060': { name: 'Richmond, VA', state: 'VA' },
  '40140': { name: 'Riverside-San Bernardino-Ontario, CA', state: 'CA' },
  '40220': { name: 'Roanoke, VA', state: 'VA' },
  '40340': { name: 'Rochester, MN', state: 'MN' },
  '40380': { name: 'Rochester, NY', state: 'NY' },
  '40420': { name: 'Rockford, IL', state: 'IL' },
  '40580': { name: 'Rocky Mount, NC', state: 'NC' },
  '40660': { name: 'Rome, GA', state: 'GA' },
  '40900': { name: 'Sacramento--Roseville--Arden-Arcade, CA', state: 'CA' },
  '40980': { name: 'Saginaw, MI', state: 'MI' },
  '41060': { name: 'St. Cloud, MN', state: 'MN' },
  '41100': { name: 'St. George, UT', state: 'UT' },
  '41140': { name: 'St. Joseph, MO-KS', state: 'MO' },
  '41180': { name: 'St. Louis, MO-IL', state: 'MO' },
  '41420': { name: 'Salem, OR', state: 'OR' },
  '41500': { name: 'Salinas, CA', state: 'CA' },
  '41540': { name: 'Salisbury, MD-DE', state: 'MD' },
  '41620': { name: 'Salt Lake City, UT', state: 'UT' },
  '41660': { name: 'San Angelo, TX', state: 'TX' },
  '41700': { name: 'San Antonio-New Braunfels, TX', state: 'TX' },
  '41740': { name: 'San Diego-Carlsbad, CA', state: 'CA' },
  '41884': { name: 'San Francisco-Oakland-Hayward, CA', state: 'CA' },
  '41940': { name: 'San Jose-Sunnyvale-Santa Clara, CA', state: 'CA' },
  '42020': { name: 'San Luis Obispo-Paso Robles-Arroyo Grande, CA', state: 'CA' },
  '42100': { name: 'Santa Barbara-Santa Maria-Goleta, CA', state: 'CA' },
  '42140': { name: 'Santa Cruz-Watsonville, CA', state: 'CA' },
  '42200': { name: 'Santa Fe, NM', state: 'NM' },
  '42220': { name: 'Santa Rosa, CA', state: 'CA' },
  '42540': { name: 'Savannah, GA', state: 'GA' },
  '42644': { name: 'Seattle-Bellevue-Everett, WA', state: 'WA' },
  '42680': { name: 'Sheboygan, WI', state: 'WI' },
  '43100': { name: 'Shreveport-Bossier City, LA', state: 'LA' },
  '43300': { name: 'Sioux City, IA-NE-SD', state: 'IA' },
  '43340': { name: 'Sioux Falls, SD', state: 'SD' },
  '43580': { name: 'South Bend-Mishawaka, IN-MI', state: 'IN' },
  '43620': { name: 'Spartanburg, SC', state: 'SC' },
  '43780': { name: 'Spokane-Spokane Valley, WA', state: 'WA' },
  '43900': { name: 'Springfield, IL', state: 'IL' },
  '44060': { name: 'Springfield, MA', state: 'MA' },
  '44100': { name: 'Springfield, MO', state: 'MO' },
  '44140': { name: 'Springfield, OH', state: 'OH' },
  '44180': { name: 'Staunton-Waynesboro, VA', state: 'VA' },
  '44220': { name: 'Stockton-Lodi, CA', state: 'CA' },
  '44300': { name: 'Sumter, SC', state: 'SC' },
  '44420': { name: 'Syracuse, NY', state: 'NY' },
  '44700': { name: 'Tallahassee, FL', state: 'FL' },
  '45060': { name: 'Tampa-St. Petersburg-Clearwater, FL', state: 'FL' },
  '45220': { name: 'Terre Haute, IN', state: 'IN' },
  '45300': { name: 'Texarkana, TX-AR', state: 'TX' },
  '45460': { name: 'Toledo, OH', state: 'OH' },
  '45500': { name: 'Topeka, KS', state: 'KS' },
  '45780': { name: 'Trenton, NJ', state: 'NJ' },
  '45820': { name: 'Tucson, AZ', state: 'AZ' },
  '45940': { name: 'Tulsa, OK', state: 'OK' },
  '46060': { name: 'Tuscaloosa, AL', state: 'AL' },
  '46220': { name: 'Tyler, TX', state: 'TX' },
  '46340': { name: 'Utica-Rome, NY', state: 'NY' },
  '46520': { name: 'Valdosta, GA', state: 'GA' },
 '46540': { name: 'Vallejo-Fairfield, CA', state: 'CA' },
 '46700': { name: 'Vero Beach, FL', state: 'FL' },
 '47020': { name: 'Victoria, TX', state: 'TX' },
 '47220': { name: 'Vineland-Bridgeton, NJ', state: 'NJ' },
 '47260': { name: 'Virginia Beach-Norfolk-Newport News, VA-NC', state: 'VA' },
 '47300': { name: 'Visalia-Porterville, CA', state: 'CA' },
 '47380': { name: 'Waco, TX', state: 'TX' },
 '47580': { name: 'Warner Robins, GA', state: 'GA' },
 '47644': { name: 'Washington-Arlington-Alexandria, DC-VA-MD-WV', state: 'DC' },
 '47894': { name: 'Waterbury, CT', state: 'CT' },
 '47900': { name: 'Waterloo-Cedar Falls, IA', state: 'IA' },
 '48060': { name: 'Wausau, WI', state: 'WI' },
 '48140': { name: 'Weirton-Steubenville, WV-OH', state: 'WV' },
 '48300': { name: 'Wenatchee, WA', state: 'WA' },
 '48424': { name: 'West Palm Beach-Boca Raton-Delray Beach, FL', state: 'FL' },
 '48540': { name: 'Wheeling, WV-OH', state: 'WV' },
 '48620': { name: 'Wichita, KS', state: 'KS' },
 '48700': { name: 'Wichita Falls, TX', state: 'TX' },
 '48864': { name: 'Wilmington, DE-MD-NJ', state: 'DE' },
 '48900': { name: 'Wilmington, NC', state: 'NC' },
 '49020': { name: 'Winchester, VA-WV', state: 'VA' },
 '49180': { name: 'Winston-Salem, NC', state: 'NC' },
 '49340': { name: 'Worcester, MA-CT', state: 'MA' },
 '49420': { name: 'Yakima, WA', state: 'WA' },
 '49620': { name: 'York-Hanover, PA', state: 'PA' },
 '49660': { name: 'Youngstown-Warren-Boardman, OH-PA', state: 'OH' },
 '49700': { name: 'Yuba City, CA', state: 'CA' },
 '49740': { name: 'Yuma, AZ', state: 'AZ' }
};

// Cache for ZIP lookups to avoid repeated API calls
const zipCache = new Map();
const CACHE_DURATION = 24 * 60 * 60 * 1000; // 24 hours

exports.handler = async (event, context) => {
 const headers = {
   'Access-Control-Allow-Origin': '*',
   'Access-Control-Allow-Headers': 'Content-Type',
   'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',
   'Content-Type': 'application/json'
 };

 if (event.httpMethod === 'OPTIONS') {
   return { statusCode: 200, headers, body: '' };
 }

 try {
   const { zipCode } = event.httpMethod === 'GET' 
     ? { zipCode: event.queryStringParameters?.zip }
     : JSON.parse(event.body || '{}');

   if (!zipCode || !/^\d{5}$/.test(zipCode)) {
     return {
       statusCode: 400,
       headers,
       body: JSON.stringify({ 
         error: 'Valid 5-digit ZIP code required',
         example: '30309'
       })
     };
   }

   // Check cache first
   const cacheKey = `zip_${zipCode}`;
   const cached = zipCache.get(cacheKey);
   if (cached && (Date.now() - cached.timestamp) < CACHE_DURATION) {
     return {
       statusCode: 200,
       headers,
       body: JSON.stringify({
         ...cached.data,
         cached: true,
         cacheAge: Math.round((Date.now() - cached.timestamp) / 1000 / 60) // minutes
       })
     };
   }

   // Lookup ZIP code data
   const zipData = await lookupZipCode(zipCode);
   
   if (!zipData) {
     return {
       statusCode: 404,
       headers,
       body: JSON.stringify({ 
         error: 'ZIP code not found or not in a supported metropolitan area',
         supportedAreas: 'All US metropolitan statistical areas with HUD data'
       })
     };
   }

   // Cache the result
   zipCache.set(cacheKey, {
     data: zipData,
     timestamp: Date.now()
   });

   return {
     statusCode: 200,
     headers,
     body: JSON.stringify(zipData)
   };

 } catch (error) {
   console.error('ZIP lookup error:', error);
   return {
     statusCode: 500,
     headers,
     body: JSON.stringify({ 
       error: 'ZIP code lookup failed',
       message: 'Please try again or contact support'
     })
   };
 }
};

// Main ZIP code lookup function
async function lookupZipCode(zipCode) {
 try {
   // Step 1: Get basic ZIP info from free API
   const basicInfo = await getBasicZipInfo(zipCode);
   if (!basicInfo) return null;

   // Step 2: Find MSA for this location
   const msaInfo = await findMSAForLocation(basicInfo);
   if (!msaInfo) return null;

   // Step 3: Get HUD data availability
   const hudAvailable = await checkHUDDataAvailability(msaInfo.msa);

   // Step 4: Get county information
   const countyInfo = await getCountyInfo(basicInfo);

   return {
     zipCode,
     city: basicInfo.city,
     state: basicInfo.state,
     county: countyInfo.county,
     msa: msaInfo.msa,
     msaName: msaInfo.name,
     coordinates: {
       lat: basicInfo.latitude,
       lng: basicInfo.longitude
     },
     hudDataAvailable: hudAvailable,
     dataSource: 'Multiple APIs + HUD Crosswalk',
     lookupTimestamp: new Date().toISOString()
   };

 } catch (error) {
   console.error(`Error looking up ZIP ${zipCode}:`, error);
   return null;
 }
}

// Get basic ZIP code information
async function getBasicZipInfo(zipCode) {
 try {
   // Use free ZIP code API
   const response = await fetch(`https://api.zippopotam.us/us/${zipCode}`);
   
   if (!response.ok) {
     // Try alternative API
     return await getZipInfoAlternative(zipCode);
   }

   const data = await response.json();
   
   if (!data.places || data.places.length === 0) {
     return null;
   }

   const place = data.places[0];
   return {
     city: place['place name'],
     state: place['state abbreviation'],
     latitude: parseFloat(place.latitude),
     longitude: parseFloat(place.longitude),
     county: place.county || null
   };

 } catch (error) {
   console.error('Error fetching basic ZIP info:', error);
   return await getZipInfoAlternative(zipCode);
 }
}

// Alternative ZIP lookup method
async function getZipInfoAlternative(zipCode) {
 try {
   // Could integrate with other APIs like:
   // - US Census Geocoding API
   // - USPS Address API
   // - Commercial ZIP APIs
   
   // For now, return null to indicate lookup failed
   console.log(`Alternative ZIP lookup for ${zipCode} not implemented`);
   return null;

 } catch (error) {
   console.error('Alternative ZIP lookup failed:', error);
   return null;
 }
}

// Find MSA for a location
async function findMSAForLocation(locationInfo) {
 try {
   // Method 1: Direct city/state lookup in MSA database
   const directMatch = findDirectMSAMatch(locationInfo);
   if (directMatch) return directMatch;

   // Method 2: Coordinate-based lookup
   const coordinateMatch = await findMSAByCoordinates(locationInfo);
   if (coordinateMatch) return coordinateMatch;

   // Method 3: Fuzzy city name matching
   const fuzzyMatch = findFuzzyMSAMatch(locationInfo);
   if (fuzzyMatch) return fuzzyMatch;

   return null;

 } catch (error) {
   console.error('Error finding MSA:', error);
   return null;
 }
}

// Direct MSA matching
function findDirectMSAMatch(locationInfo) {
 const cityState = `${locationInfo.city}, ${locationInfo.state}`;
 
 // Look for exact matches in MSA names
 for (const [msaCode, msaData] of Object.entries(MSA_DATABASE)) {
   if (msaData.name.includes(locationInfo.city) && 
       msaData.state === locationInfo.state) {
     return {
       msa: msaCode,
       name: msaData.name,
       matchType: 'direct'
     };
   }
 }

 return null;
}

// Coordinate-based MSA lookup
async function findMSAByCoordinates(locationInfo) {
 try {
   // This would typically use Census Bureau's API for MSA boundaries
   // For now, implement basic distance matching to major metros
   
   const majorMetros = [
     { msa: '12060', name: 'Atlanta-Sandy Springs-Roswell, GA', lat: 33.7490, lng: -84.3880 },
     { msa: '45300', name: 'Tampa-St. Petersburg-Clearwater, FL', lat: 27.9506, lng: -82.4572 },
     { msa: '16740', name: 'Charlotte-Concord-Gastonia, NC-SC', lat: 35.2271, lng: -80.8431 },
     { msa: '26420', name: 'Houston-The Woodlands-Sugar Land, TX', lat: 29.7604, lng: -95.3698 },
     { msa: '38060', name: 'Phoenix-Mesa-Scottsdale, AZ', lat: 33.4484, lng: -112.0740 },
     { msa: '19100', name: 'Dallas-Fort Worth-Arlington, TX', lat: 32.7767, lng: -96.7970 },
     { msa: '31084', name: 'Los Angeles-Long Beach-Anaheim, CA', lat: 34.0522, lng: -118.2437 },
     { msa: '35614', name: 'New York-Jersey City-White Plains, NY-NJ', lat: 40.7128, lng: -74.0060 },
     { msa: '16980', name: 'Chicago-Naperville-Elgin, IL-IN-WI', lat: 41.8781, lng: -87.6298 },
     { msa: '33100', name: 'Miami-Fort Lauderdale-West Palm Beach, FL', lat: 25.7617, lng: -80.1918 }
   ];

   let closestMetro = null;
   let minDistance = Infinity;

   for (const metro of majorMetros) {
     const distance = calculateDistance(
       locationInfo.latitude, locationInfo.longitude,
       metro.lat, metro.lng
     );

     // If within ~50 miles of metro center, consider it part of that MSA
     if (distance < 50 && distance < minDistance) {
       minDistance = distance;
       closestMetro = metro;
     }
   }

   if (closestMetro) {
     return {
       msa: closestMetro.msa,
       name: closestMetro.name,
       matchType: 'coordinate',
       distance: Math.round(minDistance)
     };
   }

   return null;

 } catch (error) {
   console.error('Coordinate-based MSA lookup failed:', error);
   return null;
 }
}

// Fuzzy city name matching
function findFuzzyMSAMatch(locationInfo) {
 const searchCity = locationInfo.city.toLowerCase();
 const searchState = locationInfo.state.toLowerCase();

 for (const [msaCode, msaData] of Object.entries(MSA_DATABASE)) {
   const msaName = msaData.name.toLowerCase();
   
   // Check if city name appears anywhere in MSA name
   if (msaName.includes(searchCity) || searchCity.includes(msaName.split(',')[0].split('-')[0])) {
     // Additional state validation
     if (msaData.state.toLowerCase() === searchState) {
       return {
         msa: msaCode,
         name: msaData.name,
         matchType: 'fuzzy'
       };
     }
   }
 }

 return null;
}

// Calculate distance between two coordinates (Haversine formula)
function calculateDistance(lat1, lon1, lat2, lon2) {
 const R = 3959; // Earth's radius in miles
 const dLat = (lat2 - lat1) * Math.PI / 180;
 const dLon = (lon2 - lon1) * Math.PI / 180;
 const a = Math.sin(dLat/2) * Math.sin(dLat/2) +
   Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
   Math.sin(dLon/2) * Math.sin(dLon/2);
 const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
 return R * c;
}

// Check HUD data availability
async function checkHUDDataAvailability(msaCode) {
 // In production, this would check actual HUD data availability
 // For now, assume data is available for all MSAs in our database
 return MSA_DATABASE.hasOwnProperty(msaCode);
}

// Get county information
async function getCountyInfo(locationInfo) {
 try {
   // This would typically use Census Bureau's API
   // For now, return basic county info if available
   return {
     county: locationInfo.county || 'Unknown',
     fips: null // Would get FIPS code from Census API
   };
 } catch (error) {
   return { county: 'Unknown', fips: null };
 }
}

// Clean up cache periodically
setInterval(() => {
 const now = Date.now();
 for (const [key, value] of zipCache.entries()) {
   if (now - value.timestamp > CACHE_DURATION) {
     zipCache.delete(key);
   }
 }
}, 60 * 60 * 1000); // Clean every hour
